// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhrmaInsightCore.Models;

namespace PhrmaInsightCore.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210727153605_migration75")]
    partial class migration75
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.ASARegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASA_REGION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOCATIONID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ASA_REGION");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.AzureADUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AZURE_AD_MANAGER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DEPARTMENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GIVEN_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOBILE_PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OFFICE_LOCATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OFFICE_PHONE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SURNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TITLE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USER_PRINCIPAL_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alertmediaid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AZURE_AD_USERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.BoardMeetingTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attendee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Board_Attendees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseOrSenate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interaction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Party")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phrma_Attendees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BOARD_MEETING_TRACKER");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.BoardMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoardMemberImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardMemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BOARD_MEMBERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Budgeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASA_Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Actuals")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArrowIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BoardApproved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CollapseGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Forecast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ForecastValidThrough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForecastVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("HardCommitments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteWriter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Requisitions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCommitted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_BUDGETING");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.CRMSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommitteeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EUMId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_CRM_SOURCE");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Calendar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("End")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Calendar");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.CongressDistricts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeRoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Party")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentativeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CONGRESSDISTRICTS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_DEPARTMENTS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EMPLOYEES");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.FederalAdvocacyFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Folder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Members")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FEDERAL_ADVOCACY_FILES");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.FederalAdvocacyFolders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FEDERAL_ADVOCACY_FOLDERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.FederalAdvocacyStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Json")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FEDERAL_ADVOCACY_STORE");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Forecasting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Actuals")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArrowIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollapseGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Forecast")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ForecastValidThrough")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForecastVersion")
                        .HasColumnType("int");

                    b.Property<decimal>("HardCommitments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteWriter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PendingAPInvoices")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Requisitions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCommitted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SCF_FORECAST");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.HouseMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Party")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProPublicaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HOUSE_MEMBERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.ImpexiumMembers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IMPEXIUM_MEMBERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Kastle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sequence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KastleConfirmed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitorAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckedInDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR_ATTENDANCE");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitorDelete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR_DELETE");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitorHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR_HISTORY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitorModify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SequenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR_MODIFY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.KastleVisitorRecurring", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EndDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostDepartment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpexiumGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImpexiumGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingOrganizerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NiceMeetingTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotifyEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("VisitorEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorOrganization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KASTLE_VISITOR_RECURRING");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Locations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_LOCATIONS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.MainAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_MAINACCOUNTS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.MemberNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MEMBER_NOTES");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.OrgChartUsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManagerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ORG_CHART_USERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.PhrmaEmployeeIssueAreas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMPLOYEE_EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMPLOYEE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISSUE_AREA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PHRMA_EMPLOYEE_ISSUE_AREAS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.PostSoftCommitmentForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PostSoftCommitmentForecast");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectManagerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_PROJECTMANAGERS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_PROJECTS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Prophix_Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentsKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PROPHIX_DEPARTMENTS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.ReferenceCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReferenceCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_REFERENCECODES");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SCFFinancials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Actuals")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DIMDEPARTMENTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMLOCATIONID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMMAINACCOUNTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMREFERENCECODEID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMVENDORID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("POBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PendingAPInvoices")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Requisitions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WorkingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SCF_FINANCIALS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Security", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultUserView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityUsers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SECURITY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SenateTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Party")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vote")
                        .HasColumnType("int");

                    b.Property<int>("VoteTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SENATETRACKER");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Senators", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Party")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProRepublicaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SENATORS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SharePointDocumentStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOfMeeting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembersString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Web_Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_SHAREPOINT_DOCUMENTS_FA");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SharePointUserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivityTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsExternal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Month")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHAREPOINT_USER_ACTIVITY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SharePointUserCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailDomain")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHAREPOINT_USER_ACTIVITY_COMPANY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SharePointUserSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHAREPOINT_USER_ACTIVITY_SECTION");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SharePointUserSubSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SHAREPOINT_USER_ACTIVITY_SUBSECTION");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.SoftCommitmentForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Actuals")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArrowIndicator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollapseGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ForecastBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HardCommitments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedByUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NextYearBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteWriter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Requisitions")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCommitted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WorkingBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SoftCommitmentForecast");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.TransactionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Actuals")
                        .HasColumnType("real");

                    b.Property<string>("ApprovedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("BoardApproved")
                        .HasColumnType("real");

                    b.Property<float>("CarryForward")
                        .HasColumnType("real");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMACCOUNTCATEGORYID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMACCOUNTCATEGORYNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMAPPROVERID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMDEPARTMENTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMDEPARTMENTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMEMPLOYEEID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMLOBBYAMOUNT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMLOCATIONID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMLOCATIONNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMMAINACCOUNTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMMAINACCOUNTIDANDNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMMAINACCOUNTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPOCREATEDBYID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTCATEGORY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTIDANDNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTMANAGERID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTMANAGERNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMPROJECTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMREFERENCECODEID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMREGIONNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMREQUESTERID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMVENDORID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMVENDORNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIMYEAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ForecastBudget")
                        .HasColumnType("real");

                    b.Property<string>("HeaderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceLineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalBatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Justification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastSettleVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LedgerVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedPOYN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewDepartmentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewLocationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewMainAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewProjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OpenInvoices")
                        .HasColumnType("real");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Originator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("POAmountOrdered")
                        .HasColumnType("real");

                    b.Property<float>("POBalance")
                        .HasColumnType("real");

                    b.Property<string>("POLineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PendingAPInvoices")
                        .HasColumnType("real");

                    b.Property<float>("PendingGLEntries")
                        .HasColumnType("real");

                    b.Property<string>("Posted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostedYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PriorYearExpenses")
                        .HasColumnType("real");

                    b.Property<string>("ProcurementCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RemittanceAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReqLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedDeliveryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequisitionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequisitionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requisitioner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Requisitions")
                        .HasColumnType("real");

                    b.Property<float>("Revisions")
                        .HasColumnType("real");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tier1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tier2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tier2andTier3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tier3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Transfers")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueandProject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("WorkingBudget")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("TransactionDetail");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Activity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ActivityTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Page")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("USERACTIVITY");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.UserIssueAreas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IssueArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("USER_ISSUE_AREAS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.UserTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_USERTITLES");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.Vendors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VendorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCF_VENDORS");
                });

            modelBuilder.Entity("PhrmaInsightCore.Models.DB.WeatherWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeatherURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WEATHER_WIDGET");
                });
#pragma warning restore 612, 618
        }
    }
}
